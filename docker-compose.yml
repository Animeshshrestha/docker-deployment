version: '3.1'

services:
  app:
    image: golang:alpine
    ports:
      - "8080:8080"
    volumes:
      - .:/go/src/app
      - ./config.toml:/config.toml
    working_dir: /go/src/app
    container_name: docker_app
    command: sh -c "echo 'package main; import (\"net/http\"; \"log\"); func main() { http.HandleFunc(\"/\", func(w http.ResponseWriter, r *http.Request) { w.Write([]byte(\"Hello, World!\")); }); log.Fatal(http.ListenAndServe(\":8080\", nil)) }' > main.go && go run main.go"
  db:
    image: postgres:13
    ports:
      - "9432:5432"
    networks:
      - docker-deployment
    environment:
      - POSTGRES_PASSWORD=docker
      - POSTGRES_USER=docker
      - POSTGRES_DB=docker
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U docker"]
      interval: 10s
      timeout: 5s
      retries: 6
    container_name: docker_db
    volumes:
      - type: volume
        source: docker-db
        target: /var/lib/postgresql/data
  nginx:
    image: nginx:1.15-alpine
    restart: unless-stopped
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - app
    networks:
      - docker-deployment
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - nginx
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  # Certificates installation using dns-route53 plugin
  # certbot: 
  #   image: certbot/dns-route53
  #   container_name: certbot
  #   volumes:
  #     - ./data/certbot/conf:/etc/letsencrypt
  #     - /var/lib/letsencrypt:/var/lib/letsencrypt
  #   networks:
  #     - docker-deployment
  #   depends_on:
  #     - nginx
  #   entrypoint: /bin/sh -c "trap exit TERM; while :; do echo 'Running certbot renew'; certbot renew --quiet; echo 'Sleeping for 12 hours'; sleep 43200; done"
volumes:
  docker-deployment:
  docker-db:
networks:
  docker-deployment:
    driver: bridge
